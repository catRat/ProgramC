怎样学习C程序设计
1）要着眼于培养能力。应当注意培养分析问题的能力、构造算法的能力、编程的能力和调试程序的能力。
2）要把重点放在解题的思路上，通过大量的例题学习怎样设计一个算法，构造一个程序。（谭先生认为，要实现编程，必须有两个步骤，第1个步骤时设计一个算法，第2个步骤时构造一个程序。算法和程序两个主题的重要程度至少是等同的。）
3）掌握基本要求，注意打好基础。下学校学习阶段，注意是学习 程序设计的方法，进行程序设计的基本训练，为将来进一步学习和引用打下基础。
4）要十分重视实践环节。光靠听课和看书四学不会程序设计的，学习本课程既要掌握概念，又必须动手编程，还要亲自上机调试运行。
5）要举一反三。学习程序设计，注意是掌握程序设计的思路和方法。学会使用一种计算机语言编程，在需要时改用另一种语言应当不会太困难。
6）要提倡和培养创新精神。学生不应当局限于教材中的内容，应该启发学生学习兴趣和创新意识。在本章的习题中，包括了一些难度较大的题目，建议学生尽量选做，学会自己发展知识，提高能力。 

从确定问题到最后完成任务，一般经历以下几个工作阶段：
1）对于接手的任务要进行认真的分析，研究所给定的条件，分析最后应达到的目的，找出解决问题的规律，选择解体的方法。在此过程中，可以忽略一些次要的因素，使问题抽象化，这个过程就是建模。
2）设计出解题的方法和具体步骤。
3）编写程序。
4）对源程序进行编译和链接。
5）运行可执行程序，分析得到的运行结果。
6）编写程序的说明文档。


第二章 算法

简单的算法举例

例2.1 求 1*2*3*4*5。

解：设置两个变量，一个表示被乘数，一个表示乘数。今令p为被乘数，变量i为乘数。用循环算法来求结果。可以将算法写为如下：
S1: 使p:=1
S2: let i := 2
S3: p := p * i
S4: i := i + 1
S5: if i <= 5 then 返回到S3; else 算法结束。

例2.2 有50个学生，要求输出成绩在80分以上的学生的学号和成绩。

为描述方便，统一用n表示学生学号，用下班i表示第几个学生，ni表示第i个学生学会。

算法：
S1: 1 := i
S2: if gi >= 80 then print ni print gi
S3: i := i + 1
S4: if i <= 50, then back to S2 else done

例2.3 判定2000-2500年中的每一年是否为闰年，并将结果输出。

例2.4 求1 - 1/2 + 1/3 - 1/4 + ... + 1/99 - 1/100。

例2.5 给出一个大于或等于3的正整数，判断它是不是一个素数。

算法的特性

对于一般最终用户来说，它们并不需要在处理每一个问题时都需要自己设计算法和编写程序……对于程序设计人员来说，必须学会设计常用的算法，并根据算法编写程序。

怎样表示一个算法

用伪代码来表示算法

用伪代码写算法并无固定的、严格的语法规则（即无一个标准），可以用英文，也可以中英文混用。只要把意思表达清楚，便于书写和阅读即可。

例2.16 求5！，用伪代码表示的算法如下：

begin
	t := 1
	i := 2
	while i <= 5
		{ t := t * i
		i := i + 1
		}
	print t
end

列2.17 求1 - 1/2 + 1/3 - 1/4 + ... + 1/99 - 1/100。


对于上面结束的几种算法的表示方法，软件专业人员一般习惯使用伪代码……

结构化程序设计方法

一个结构化程序就是用计算机语言表示的结构化算法，用3中基本结构组成的程序必然时结构化的程序。

具体来说，采取以下方法保证得到结构化的程序：

1）自顶而下；
2）逐步细化
3）模块化设计
4）结构化编程

应当掌握自顶而下，逐步细化的设计方法。这种设计方法的过程时将问题求解由抽象逐步具体化的过程。

用这种方法便于验证算法的正确性，在向下一层展开前应仔细检查本层设计是否正确，只有上一层时正确的才能向下细化。如果每一层设计都没有问题，则曾哥算法就是正确的。由于每一次向下细化时都不太复杂，因此容易保证整个算法的正确性。检查时也是由上而下逐层检查。

在程序设计中采用模块设计的方法，尤其当程序比较复杂时，更有必要。在拿到一个程序模块（实际上时程序模块的任务书）以后，根据程序模块的功能将它划分为若干个模块，如果还嫌这些子模块的规模大，可以在划分为更小的模块。

程序中的子模块在C语言中通常用函数来实现。

程序中的子模块一般不超过50行，即把它打印输出时不超过一页，这一的规模便于组织，阅读。划分子模块时应注意模块的独立性，即使用一个模块完成一项功能，耦合性越小越好。模块化设计的思想实际上时一种“分而治之”的思想，把一个大任务分为若干个子任务，每一个子任务就相对简单了。

结构化程序设计用来解决人男思维能力的局限性和被处理问题的复杂性之间的矛盾。

在设计好一个结构化的算法之后，还要善于进行结构化编码（coding）。所谓编码就是将已设计好的算法用计算机语言来表示，即根据已经细化的算法正确地写出计算机程序。结构化语言都已与3种基本结构对应的语句，进行结构化编码并不困难。

本章的内容十分重要……关键是设计算法，有了正确的算法，用任何语言进行编码都不是困难的事。  

习题

1. 什么是算法？试从日常生活找出3个例子，描述它们的算法。

2. 什么叫结构化的算法？为什么要提倡结构化的算法？

3. 试着描述3种基本结构的特点，请另外设计两种基本结构。
4. 用传统流程图表示求解以下问题的算法。
1）有两个瓶子A和B，分别盛放醋和酱油，要求将它们互换。
2）一次将10个整数输入，要求输出其中最大的数。
3）有3个数a，b，c，要求按大小顺序把它们输出。
4）求 1 + 2 + 3 + 。。。 + 100。
5）判断一个数n能否同时被3和5整除。
6）将100~200之间的素数输出。
7）求两个数m和n的最大公约数。
8）求方程式 ax^2 + bx + c = 0 的根。分别考虑：
a 有两个不等的实根
b 有两个相等的实根
5. 用N-S图表示第4题种各题的算法。
6. 用伪代码表示第4题中各题的算法。
8. 用自顶向下、逐步细化的方法进行以下算法的设计：
（1）输出1900~2000年中是闰年的年份，如何下面两个条件之一的年份是闰年：
a 能被4整除但不能被100整除
b 能被100整除且能被400整除
（2）求 ax^2 + bx + c = 0 的根。分别考虑 d = b^2 - 4ac 大于0、等于0和小于0这3中情况。
（3）输入10个数，输出其中最大的数。
