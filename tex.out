\BOOKMARK [0][-]{chapter.1}{FOREWORD}{}% 1
\BOOKMARK [1][-]{section.1.1}{为什么要学习程序设计？}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{为什么选择C语言。}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{怎样组织程序设计的教学？怎样处理算法和语言的关系。}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{怎样学习C程序设计}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{从实际出发，区别对待}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{为什么要修订《C程序设计》}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.7}{为了满足不同的需要，出版不同层次的C程序设计教材}{chapter.1}% 8
\BOOKMARK [0][-]{chapter.2}{常见错误分析}{}% 9
\BOOKMARK [0][-]{chapter.3}{程序设计和C语言}{}% 10
\BOOKMARK [1][-]{section.3.1}{什么是计算机程序}{chapter.3}% 11
\BOOKMARK [1][-]{section.3.2}{什么是计算机语言}{chapter.3}% 12
\BOOKMARK [1][-]{section.3.3}{C语言的发展及其特点}{chapter.3}% 13
\BOOKMARK [1][-]{section.3.4}{最简单的C语言程序}{chapter.3}% 14
\BOOKMARK [2][-]{subsection.3.4.1}{最简单的C语言程序举例}{section.3.4}% 15
\BOOKMARK [2][-]{subsection.3.4.2}{C语言程序的结构}{section.3.4}% 16
\BOOKMARK [1][-]{section.3.5}{运行C程序的步骤与方法}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.6}{程序设计的任务}{chapter.3}% 18
\BOOKMARK [1][-]{section.3.7}{习题}{chapter.3}% 19
\BOOKMARK [0][-]{chapter.4}{算法——程序的灵魂}{}% 20
\BOOKMARK [1][-]{section.4.1}{什么是算法}{chapter.4}% 21
\BOOKMARK [1][-]{section.4.2}{简单的算法举例}{chapter.4}% 22
\BOOKMARK [1][-]{section.4.3}{算法的特性}{chapter.4}% 23
\BOOKMARK [1][-]{section.4.4}{怎样表示一个算法}{chapter.4}% 24
\BOOKMARK [2][-]{subsection.4.4.1}{用自然语言表示算法}{section.4.4}% 25
\BOOKMARK [2][-]{subsection.4.4.2}{用流程图表示算法}{section.4.4}% 26
\BOOKMARK [2][-]{subsection.4.4.3}{三种结构和改进的流程图}{section.4.4}% 27
\BOOKMARK [2][-]{subsection.4.4.4}{用N-S流程图表示算法}{section.4.4}% 28
\BOOKMARK [2][-]{subsection.4.4.5}{用伪代码表示算法}{section.4.4}% 29
\BOOKMARK [2][-]{subsection.4.4.6}{用计算机语言表示算法}{section.4.4}% 30
\BOOKMARK [1][-]{section.4.5}{结构化程序设计方法}{chapter.4}% 31
\BOOKMARK [1][-]{section.4.6}{习题}{chapter.4}% 32
\BOOKMARK [0][-]{chapter.5}{最简单的C程序设计——顺序程序设计}{}% 33
\BOOKMARK [1][-]{section.5.1}{顺序程序设计举例}{chapter.5}% 34
\BOOKMARK [1][-]{section.5.2}{数据的表现形式及其运算}{chapter.5}% 35
\BOOKMARK [2][-]{subsection.5.2.1}{常量和变量}{section.5.2}% 36
\BOOKMARK [2][-]{subsection.5.2.2}{数据类型}{section.5.2}% 37
\BOOKMARK [2][-]{subsection.5.2.3}{整形类型}{section.5.2}% 38
\BOOKMARK [2][-]{subsection.5.2.4}{字符型数据}{section.5.2}% 39
\BOOKMARK [2][-]{subsection.5.2.5}{浮点型数据}{section.5.2}% 40
\BOOKMARK [2][-]{subsection.5.2.6}{怎样确定常量的类型}{section.5.2}% 41
\BOOKMARK [2][-]{subsection.5.2.7}{运算符和表达式}{section.5.2}% 42
\BOOKMARK [1][-]{section.5.3}{C语句}{chapter.5}% 43
\BOOKMARK [2][-]{subsection.5.3.1}{C语句的作用和分类}{section.5.3}% 44
\BOOKMARK [2][-]{subsection.5.3.2}{最基本的语句——赋值语句}{section.5.3}% 45
\BOOKMARK [1][-]{section.5.4}{数据的输入输出}{chapter.5}% 46
\BOOKMARK [2][-]{subsection.5.4.1}{输入输出举例}{section.5.4}% 47
\BOOKMARK [2][-]{subsection.5.4.2}{有关数据输入输出的概念}{section.5.4}% 48
\BOOKMARK [2][-]{subsection.5.4.3}{用printf函数输出数据}{section.5.4}% 49
\BOOKMARK [2][-]{subsection.5.4.4}{用scanf函数输入数据}{section.5.4}% 50
\BOOKMARK [2][-]{subsection.5.4.5}{字符数据的输入输出}{section.5.4}% 51
\BOOKMARK [1][-]{section.5.5}{习题}{chapter.5}% 52
\BOOKMARK [0][-]{chapter.6}{选择结构程序设计}{}% 53
\BOOKMARK [1][-]{section.6.1}{选择结构和条件判断}{chapter.6}% 54
\BOOKMARK [1][-]{section.6.2}{用if语句实现选择结构}{chapter.6}% 55
\BOOKMARK [2][-]{subsection.6.2.1}{用if语句处理选择结构举例}{section.6.2}% 56
\BOOKMARK [2][-]{subsection.6.2.2}{if语句的一般形式}{section.6.2}% 57
\BOOKMARK [1][-]{section.6.3}{关系运算符和关系表达式}{chapter.6}% 58
\BOOKMARK [2][-]{subsection.6.3.1}{关系运算符及其优先次序}{section.6.3}% 59
\BOOKMARK [2][-]{subsection.6.3.2}{关系表达式}{section.6.3}% 60
\BOOKMARK [1][-]{section.6.4}{逻辑运算符和逻辑表达式}{chapter.6}% 61
\BOOKMARK [2][-]{subsection.6.4.1}{逻辑运算符机器优先次序}{section.6.4}% 62
\BOOKMARK [2][-]{subsection.6.4.2}{逻辑表达式}{section.6.4}% 63
\BOOKMARK [2][-]{subsection.6.4.3}{逻辑型变量}{section.6.4}% 64
\BOOKMARK [1][-]{section.6.5}{条件运算符和条件表达式}{chapter.6}% 65
\BOOKMARK [1][-]{section.6.6}{选择结构的嵌套}{chapter.6}% 66
\BOOKMARK [1][-]{section.6.7}{用switch语句实现多分支选择结构}{chapter.6}% 67
\BOOKMARK [1][-]{section.6.8}{选择结构程序综合举例}{chapter.6}% 68
\BOOKMARK [1][-]{section.6.9}{习题}{chapter.6}% 69
\BOOKMARK [0][-]{chapter.7}{循环结构程序设计}{}% 70
\BOOKMARK [1][-]{section.7.1}{用while语句实现循环}{chapter.7}% 71
\BOOKMARK [1][-]{section.7.2}{用do whiel 语句实现循环}{chapter.7}% 72
\BOOKMARK [1][-]{section.7.3}{用for语句实现循环}{chapter.7}% 73
\BOOKMARK [1][-]{section.7.4}{循环的嵌套}{chapter.7}% 74
\BOOKMARK [1][-]{section.7.5}{几种循环的比较}{chapter.7}% 75
\BOOKMARK [1][-]{section.7.6}{改变循环执行的状态}{chapter.7}% 76
\BOOKMARK [2][-]{subsection.7.6.1}{用break语句提前终止循环}{section.7.6}% 77
\BOOKMARK [2][-]{subsection.7.6.2}{用continue语句提前结束本次循环}{section.7.6}% 78
\BOOKMARK [2][-]{subsection.7.6.3}{break语句和continue语句的区别}{section.7.6}% 79
\BOOKMARK [1][-]{section.7.7}{循环程序举例}{chapter.7}% 80
\BOOKMARK [1][-]{section.7.8}{习题}{chapter.7}% 81
\BOOKMARK [0][-]{chapter.8}{利用数组处理批量数据}{}% 82
\BOOKMARK [1][-]{section.8.1}{怎样定义和引用一维数组}{chapter.8}% 83
\BOOKMARK [2][-]{subsection.8.1.1}{怎样定义一维数组}{section.8.1}% 84
\BOOKMARK [2][-]{subsection.8.1.2}{怎样引用一维数组元素}{section.8.1}% 85
\BOOKMARK [2][-]{subsection.8.1.3}{一维数组的初始化}{section.8.1}% 86
\BOOKMARK [2][-]{subsection.8.1.4}{一维数组程序举例}{section.8.1}% 87
\BOOKMARK [1][-]{section.8.2}{怎样定义和引用二维数组}{chapter.8}% 88
\BOOKMARK [2][-]{subsection.8.2.1}{怎样定义二维数组}{section.8.2}% 89
\BOOKMARK [2][-]{subsection.8.2.2}{怎样引用二维数组的元素}{section.8.2}% 90
\BOOKMARK [2][-]{subsection.8.2.3}{二维数组的初始化}{section.8.2}% 91
\BOOKMARK [2][-]{subsection.8.2.4}{二维数组程序举例}{section.8.2}% 92
\BOOKMARK [1][-]{section.8.3}{字符数组}{chapter.8}% 93
\BOOKMARK [2][-]{subsection.8.3.1}{怎样定义字符数组}{section.8.3}% 94
\BOOKMARK [2][-]{subsection.8.3.2}{字符数组的初始化}{section.8.3}% 95
\BOOKMARK [2][-]{subsection.8.3.3}{怎样引用字符数组中的元素}{section.8.3}% 96
\BOOKMARK [2][-]{subsection.8.3.4}{字符串和字符串结束的标志}{section.8.3}% 97
\BOOKMARK [2][-]{subsection.8.3.5}{字符数组的输入输出}{section.8.3}% 98
\BOOKMARK [2][-]{subsection.8.3.6}{使用字符串处理函数}{section.8.3}% 99
\BOOKMARK [2][-]{subsection.8.3.7}{字符数组应用举例}{section.8.3}% 100
\BOOKMARK [1][-]{section.8.4}{习题}{chapter.8}% 101
\BOOKMARK [0][-]{chapter.9}{用函数实现模块化程序设计}{}% 102
\BOOKMARK [1][-]{section.9.1}{怎样定义函数}{chapter.9}% 103
\BOOKMARK [2][-]{subsection.9.1.1}{为什么要定义函数}{section.9.1}% 104
\BOOKMARK [2][-]{subsection.9.1.2}{定义函数的方法}{section.9.1}% 105
\BOOKMARK [1][-]{section.9.2}{调用函数}{chapter.9}% 106
\BOOKMARK [2][-]{subsection.9.2.1}{函数调用的形式}{section.9.2}% 107
\BOOKMARK [2][-]{subsection.9.2.2}{函数调用时数据传递}{section.9.2}% 108
\BOOKMARK [2][-]{subsection.9.2.3}{函数调用的过程}{section.9.2}% 109
\BOOKMARK [2][-]{subsection.9.2.4}{函数的返回值}{section.9.2}% 110
\BOOKMARK [1][-]{section.9.3}{对被调用函数的声明和函数原型}{chapter.9}% 111
\BOOKMARK [1][-]{section.9.4}{函数的嵌套调用}{chapter.9}% 112
\BOOKMARK [1][-]{section.9.5}{函数的递归调用}{chapter.9}% 113
\BOOKMARK [1][-]{section.9.6}{数组作为函数参数}{chapter.9}% 114
\BOOKMARK [2][-]{subsection.9.6.1}{数组元素作为函数实参}{section.9.6}% 115
\BOOKMARK [2][-]{subsection.9.6.2}{数组名作函数参数}{section.9.6}% 116
\BOOKMARK [2][-]{subsection.9.6.3}{多维数组名作函数参数}{section.9.6}% 117
\BOOKMARK [1][-]{section.9.7}{局部变量和全局变量}{chapter.9}% 118
\BOOKMARK [2][-]{subsection.9.7.1}{局部变量}{section.9.7}% 119
\BOOKMARK [2][-]{subsection.9.7.2}{全局变量}{section.9.7}% 120
\BOOKMARK [1][-]{section.9.8}{变量的存储方式和生存期}{chapter.9}% 121
\BOOKMARK [2][-]{subsection.9.8.1}{动态存储方式与静态存储方式}{section.9.8}% 122
\BOOKMARK [2][-]{subsection.9.8.2}{局部变量的存储类别}{section.9.8}% 123
\BOOKMARK [2][-]{subsection.9.8.3}{全局变量的存储类别}{section.9.8}% 124
\BOOKMARK [1][-]{section.9.9}{关于变量的声明和定义}{chapter.9}% 125
\BOOKMARK [1][-]{section.9.10}{内部函数和外部函数}{chapter.9}% 126
\BOOKMARK [2][-]{subsection.9.10.1}{内部函数}{section.9.10}% 127
\BOOKMARK [2][-]{subsection.9.10.2}{外部函数}{section.9.10}% 128
\BOOKMARK [1][-]{section.9.11}{习题}{chapter.9}% 129
\BOOKMARK [0][-]{chapter.10}{善于利用指针}{}% 130
\BOOKMARK [1][-]{section.10.1}{指针是什么}{chapter.10}% 131
\BOOKMARK [1][-]{section.10.2}{指针变量}{chapter.10}% 132
\BOOKMARK [1][-]{section.10.3}{通过指针引用数组}{chapter.10}% 133
\BOOKMARK [1][-]{section.10.4}{通过指针引用字符串}{chapter.10}% 134
\BOOKMARK [1][-]{section.10.5}{指向函数的指针}{chapter.10}% 135
\BOOKMARK [1][-]{section.10.6}{返回指针值的函数}{chapter.10}% 136
\BOOKMARK [1][-]{section.10.7}{通过指针引用数组}{chapter.10}% 137
\BOOKMARK [2][-]{subsection.10.7.1}{数组元素的指针}{section.10.7}% 138
\BOOKMARK [2][-]{subsection.10.7.2}{在因哟个数组元素时指针的运算}{section.10.7}% 139
\BOOKMARK [2][-]{subsection.10.7.3}{通过指针引用数组元素}{section.10.7}% 140
\BOOKMARK [2][-]{subsection.10.7.4}{用素组名作函数参数}{section.10.7}% 141
\BOOKMARK [2][-]{subsection.10.7.5}{通过指针引用多维数组}{section.10.7}% 142
\BOOKMARK [1][-]{section.10.8}{通过指针引用字符串}{chapter.10}% 143
\BOOKMARK [2][-]{subsection.10.8.1}{字符串的引用方法}{section.10.8}% 144
\BOOKMARK [2][-]{subsection.10.8.2}{字符串指针作函数参数}{section.10.8}% 145
\BOOKMARK [2][-]{subsection.10.8.3}{使用字符指针变量和字符数组的比较}{section.10.8}% 146
\BOOKMARK [1][-]{section.10.9}{指向函数的指针}{chapter.10}% 147
\BOOKMARK [2][-]{subsection.10.9.1}{用函数指针变量调用函数}{section.10.9}% 148
\BOOKMARK [2][-]{subsection.10.9.2}{怎样定义和使用指向函数的指针变量}{section.10.9}% 149
\BOOKMARK [2][-]{subsection.10.9.3}{用只想函数的指针作为函数参数}{section.10.9}% 150
\BOOKMARK [1][-]{section.10.10}{返回指针值的函数}{chapter.10}% 151
\BOOKMARK [1][-]{section.10.11}{指针数组和多重指针}{chapter.10}% 152
\BOOKMARK [2][-]{subsection.10.11.1}{指针数组作main函数的形参}{section.10.11}% 153
\BOOKMARK [1][-]{section.10.12}{动态内存分配与指向它的指针变量}{chapter.10}% 154
\BOOKMARK [2][-]{subsection.10.12.1}{什么是内存的动态分配}{section.10.12}% 155
\BOOKMARK [2][-]{subsection.10.12.2}{怎样建立内存的动态分配}{section.10.12}% 156
\BOOKMARK [2][-]{subsection.10.12.3}{void指针类型}{section.10.12}% 157
\BOOKMARK [1][-]{section.10.13}{有关指针的小结}{chapter.10}% 158
\BOOKMARK [1][-]{section.10.14}{习题}{chapter.10}% 159
\BOOKMARK [0][-]{chapter.11}{用户自己建立数据类型}{}% 160
\BOOKMARK [1][-]{section.11.1}{定义和使用结构体变量}{chapter.11}% 161
\BOOKMARK [2][-]{subsection.11.1.1}{自己建立结构体类型}{section.11.1}% 162
\BOOKMARK [2][-]{subsection.11.1.2}{定义结构提类型变量}{section.11.1}% 163
\BOOKMARK [2][-]{subsection.11.1.3}{结构体变量的初始化和引用}{section.11.1}% 164
\BOOKMARK [1][-]{section.11.2}{使用结构体数组}{chapter.11}% 165
\BOOKMARK [2][-]{subsection.11.2.1}{定义结构体数组}{section.11.2}% 166
\BOOKMARK [2][-]{subsection.11.2.2}{结构体数组的应用举例}{section.11.2}% 167
\BOOKMARK [1][-]{section.11.3}{结构体指针}{chapter.11}% 168
\BOOKMARK [2][-]{subsection.11.3.1}{指向结构体的指针}{section.11.3}% 169
\BOOKMARK [2][-]{subsection.11.3.2}{指向结构体数组的指针}{section.11.3}% 170
\BOOKMARK [2][-]{subsection.11.3.3}{用结构体变量和结构体变量的指针作函数参数}{section.11.3}% 171
\BOOKMARK [1][-]{section.11.4}{用指针处理链表}{chapter.11}% 172
\BOOKMARK [2][-]{subsection.11.4.1}{什么是链表}{section.11.4}% 173
\BOOKMARK [2][-]{subsection.11.4.2}{建立简单的静态链表}{section.11.4}% 174
\BOOKMARK [2][-]{subsection.11.4.3}{建立动态链表}{section.11.4}% 175
\BOOKMARK [1][-]{section.11.5}{共用体类型}{chapter.11}% 176
\BOOKMARK [2][-]{subsection.11.5.1}{什么是共用体类型}{section.11.5}% 177
\BOOKMARK [1][-]{section.11.6}{使用枚举类型}{chapter.11}% 178
\BOOKMARK [1][-]{section.11.7}{用typedef声明新类型名}{chapter.11}% 179
\BOOKMARK [1][-]{section.11.8}{习题}{chapter.11}% 180
\BOOKMARK [0][-]{chapter.12}{对文件的输入输出}{}% 181
\BOOKMARK [1][-]{section.12.1}{C文件的有关基本知识}{chapter.12}% 182
\BOOKMARK [2][-]{subsection.12.1.1}{什么是文件}{section.12.1}% 183
\BOOKMARK [2][-]{subsection.12.1.2}{文件名}{section.12.1}% 184
\BOOKMARK [2][-]{subsection.12.1.3}{文件的分类}{section.12.1}% 185
\BOOKMARK [2][-]{subsection.12.1.4}{文件缓冲区}{section.12.1}% 186
\BOOKMARK [2][-]{subsection.12.1.5}{文件类型指针}{section.12.1}% 187
\BOOKMARK [1][-]{section.12.2}{打开与关闭文件}{chapter.12}% 188
\BOOKMARK [2][-]{subsection.12.2.1}{用fopen函数打开数据文件}{section.12.2}% 189
\BOOKMARK [2][-]{subsection.12.2.2}{用fclose函数关闭数据文件}{section.12.2}% 190
\BOOKMARK [1][-]{section.12.3}{顺序读写数据文件}{chapter.12}% 191
\BOOKMARK [2][-]{subsection.12.3.1}{怎样向文件读写字符}{section.12.3}% 192
\BOOKMARK [2][-]{subsection.12.3.2}{怎样向文件读写一个字符串}{section.12.3}% 193
\BOOKMARK [2][-]{subsection.12.3.3}{用格式化的方式读写文件}{section.12.3}% 194
\BOOKMARK [2][-]{subsection.12.3.4}{用二进制方式向文件爱你读写一组数据}{section.12.3}% 195
\BOOKMARK [1][-]{section.12.4}{随机读写数据文件}{chapter.12}% 196
\BOOKMARK [2][-]{subsection.12.4.1}{文件位置标记及其定位}{section.12.4}% 197
\BOOKMARK [2][-]{subsection.12.4.2}{随机读写}{section.12.4}% 198
\BOOKMARK [1][-]{section.12.5}{文件读写的出错检测}{chapter.12}% 199
\BOOKMARK [1][-]{section.12.6}{习题}{chapter.12}% 200
