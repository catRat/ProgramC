FOREWORD
为什么要学习程序设计？
大学生不能满足于只会用办公软件，应当有更高的要求。
只有懂得程序设计，才能进一步懂得计算机，真正了解计算机是怎样工作的。通过学习程序设计，学会进一步了解计算机的工作原理，更好地理解和应用计算机；掌握计算机处理问题的方法；培养分析问题和解决问题的能力；具有编制程序的初步能力。即使将来不是计算机专业人员，由于学过程序设计，理解软件生产的过程，就能与程序开发人员更好地沟通与合作，开展本领域中的计算机应用，开发与本领域有关的应用程序。
因此，都应当学习程序设计知识，并且把它作为进一步学习和应用计算机的基础。

关于计算机工作原理的一个特点是，当代计算机以高速的顺序指令执行。

怎样学习C程序设计
（1）要着眼于培养能力。应当注意培养分析问题的能力、构造算法的能力、编程的能力和调试程序的能力。
（2）要把重点放在解题的思路上，通过大量的例题学习怎样设计一个算法，构造一个程序。
（3）掌握基本要求，注意打好基础。
（4）要十分重视实践环节。
（5）要举一反三。
（6）要提倡和培养创新精神。
（7）如果对学生有较高的程序设计要求，应当在学习本课程后，安排一次集中的课程设计环节，要求学生独立完成一个有一定规模的程序。

第一章 程序设计和C语言

1.1 什么是计算机程序

第一个要明确的概念是计算机程序（程序）。

图灵模型是一个适用于通用计算机的更好模型。图灵模型添加了一个额外的元素——程序到不同的计算机前中。程序是用来告诉计算机对数据进行处理的指令集合。

在这个图灵模型中，输出数据是依赖于两个因素的结合作用：输入数据和程序。对于相同的数据输入，如果改变程序，则可以产生不同的输出。类似的，对于同样的程序，如果改变输入数据，其输出结果也将不同。

通用图灵机是对现代计算机的首先描述，该机器只要提供了合适的程序就可以做任何运算。可以证明，一台很强大的计算机和通用图灵机一样能进行同样的运算。我们所需要的仅仅是为这两者提供数据以及用于描述如何做运算的程序。实际上，通用图灵机能做任何可计算的运算。

————计算机科学导论

计算机语言

这种计算机能直接识别和而接受的二进制代码称为机器指令（machine instruction）。机器指令的集合就是该计算机的机器语言（machine language）。

符号语言

人们创造了符号语言，它用一些英文字母和数字表示一个指令，符号语言又称为符号汇编语言或汇编语言（assembler language）。

高级语言经历了不同的发展阶段：
1）非结构化的语言。初期的语言属于非结构化的语言，编程风格比较随意，只要符合语法规则即可，没有严格的规范要求，程序中的流程可以随意跳转。人们为为最修程序执行的效率而采用许多“小技巧”，使程序变得难于阅读和维护。
2）结构化的语言。为了解决以上问题，提出了“结构化程序设计方法”，规定程序必须由具有良好特性的基本结构（顺序结构、分支结构、顺环结构）构成，程序中的流程不允许随意跳转，程序总是由上而下顺序执行各个基本结构。这种程序结构清晰，易于编写、阅读和维护。QBASIC,FORTRAN 77和C语言等属于结构化的语言，这些语言的特点是支持结构化程序设计方法。

以上两种语言都是基于过程的语言，在编写程序时需要具体指定每一个过程的细节。在编写规模较小的程序时，还能得心应手，但在处理规模较大的程序时，就显得捉襟见肘、力不从心了。在实践的发展中，人么又提出额面向对象的程序设计方法。程序面对的不是过程的细节，而是一个对象，对象是有数据以及对数据进行的操作组成的。
3）面向对象的语言。近十多年来，在处理规模较大的问题时，开始使用面向对象的语言。C++,C#,Visual Basic和Java等语言是支持面向对象程序设计方法的语言。有关面向对象的程序设计方法和面向对象的语言在本书不做详细介绍，有兴趣的可参考有关专门书籍。

1.3 C语言的发展及其特点

本书是介绍怎样利用C语言作为工具进行程序设计的。为什么要选择C语言呢？ 这里有必要对C语言的发展和特点有一定的了解。

C语言是国际上广泛流行的计算机高级语言。

C语言的祖先是BCPL语言。1967年英国剑桥大学的Martin Richards推出没有类型的BCPL（Basic Combined Programming Languade）语言。1970年美国AT&T贝尔实验室的Ken Thompson以BCPL语言为基础，设计除了很简单且很接近硬件的B语言（取BCPL的第一个字母）。但B语言过于简单，功能有限。1972-1973年间，美国贝尔实验室的D.M.Ritchie在B语言的基础上设计出了C语言。C语言既保持了BCPL和B语言的优点（精练，接近硬件），又克服了它们的缺点（过于简单、无数据类型等），C语言的新特点主要表现在具有多种数据类型（如字符、数值、数组、结构体和指针等）。开发C语言的目的在于尽可能降低用它写的软件对硬件平台的依赖程度，使之具有可移植性。

最初的C语言只是为描述和实现UNIX操作系统提供一种工作语言而设计。1973年，Ken Thompson和D.M.Ritchie合作把UNIX的90%以上用C语言改写，即UNIX第5版。随着UNIX的日益广泛使用，C语言也迅速得到推广。1978年以后，C语言先后移植到大、中、小和微型计算机上。C语言便很快风靡全世界，成为世界上应用最广泛的程序设计高级语言。

以UNIX第7版中的C语言编译程序为基础，1978年，Brian W.Kernighan和Dennis M.Ritchie合著了影响深远的名著The C Programming Language，本书中介绍的C语言成为广泛使用的C语言版本的基础，它是实际上第一个C语言标准。

C语言是一种用途广泛、功能强大、使用灵活的过程性（procedural）编程语言，即可用于编写应用软件，又能用于编写系统软件。因此C语言问世以来得到迅速推广。自20世纪90年大初，C语言在我国开始推广以来，学习和使用C语言的人越来越多，成了学习和使用人数最多的一种计算机语言，绝大多数理工科大学都开设了C语言程序设计课程。掌握C语言成为计算机开发人员的一项基本功。

C语言有以下一些主要特点。
（1）语言简洁、紧凑，使用方便、灵活。C语言一共只有37个关键字，9种控制语句，程序书写形式自由。C语言程序比其他许多高级语言简练，源程序短，因此输入程序时工作量少。
（2）运算符丰富。C语言的运算符包含的范围很广泛，共有34种运算符。C语言把括号、赋值和强制类型转换等都作为运算符处理，从而使C语言的运算类型极其丰富，表达式类型多样化。灵活使用各种运算符可以实现在其他高级语言种难以实现的运算。
（3）数据类型丰富。C语言提供的数据类型包括：整型、浮点型、字符型、数组类型、指针类型、结构体类型和共用体类型等，C99又扩充了复数浮点类型、超长整型和布尔类型等。尤其时指针类型数据，使用十分灵活和多样化，能用来事项各种复杂的数据结构（如链表、树、栈等）的运算。
（4）具有结构化的控制语句。用函数作为程序的模块单位，便于事项程序的模块化。C语言时完全模块化和结构化的语言。
（5）语法限制不太严格，程序设计自由度大。
（6）C语言允许直接访问物理地址，能进行位（bit）操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作。
（7）用C语言编写的程序可移植性好。
（8）生成目标代码质量高，程序执行效率高。

C原来是专门为编写系统软件而设计的，许多大的软件都用C语言编写，这是因为C语言的可移植性好和硬件控制能力高，表达和运算能力强。许多以前只能用汇编语言处理的问题，后来可以改用C语言来处理了。目前C的主要用途之一是编写“嵌入式系统程序”。由于具有上述优点，使C语言应用十分广泛，许多应用软件也用C语言编写。

对C语言以上的特点，待学完C语言以后再回顾以下，就会有比较深的体会。

1.4 最简单的C语言程序

为了使用C语言编程序，必须了解C语言，并且能熟练地使用C语言。本书将由浅到深地介绍怎样阅读C语言程序和使用C语言编写程序。

1.4.1 最简单的C语言程序举例

例1.1 要求在屏幕上输出以下一行信息。

This is a C program.

解题思路：在主函数中调用printf函数原样输出以上文字。

编写程序：

#include<stdio.h>
int main(void)
{
	printf("This is a C program.\n");
	return 0;
}

程序分析：

例1.2 求两个整数之和。

解题思路：设置3个变量，a和b用来存放两个整数，sum用来存放和数。用赋值运算符“=”把相加的结果传送给sum。

编写程序：
#include<stdio.h>
int main()
{
	int a, b, sum;
	a = 123;
	b = 456;
	sum = a + b;
	printf("sum is %d\n", sum);
	return 0;
}
运行结果：

程序分析：

例1.3 求两个整数中的最大者。

解题思路

1.5 运行C程序的步骤与方法

 计算机不能直接识别和执行用高级语言写的指令。必须用编译程序把C源程序翻译成二进制形式的目标程序，然后再将该目标程序与系统的函数库以及其他目标程序连接起来，形成可执行的目标程序。

 在编写好一个C源程序后，怎样上级进行编译和运行呢？一般要经过以下几个步骤：
 （1）上机输入和编辑源程序。
 （2）对源程序进行编译，先用C编译系统提供的“预处理器”对程序中的预处理指令进行编译预处理。由预处理得到的信息与程序其他部分一起，组成一个完整的、可以用来进行正是编译的源程序，然后由编译系统对该源程序进行编译。

 编译的作用首先是对源程序进行检查，判定它有无语法方面的错误，如有，则发出“出错信息”，告诉编程人员认真检查改正。修改程序后重新进行编译，如有错，在发出“出错信息”。如此反复进行，知道没有语法错误为止。这是，编译程序自动把源程序转换为二进制形式的目标程序。如果不特别指定，此目标程序一般也存放在用户当前目录下，此时源文件没有消失。

 在用编译系统对源程序进行编译时，自动包括了预编译和正式编译两个阶段，一气呵成。用户不必分别发出二次指令。

 （3）进行链接处理。经过编译所得到的二进制文件还不能共计算机直接执行。前面已说明：一个程序可能包含若干个源程序文件，而编译是以源程序文件为对象的，一次编译只能得到与一个源程序文件相对应的目标文件，它只是整个程序的一部分。必须把所有的编译后得到的目标模块链接装配起来，在于函数库相连接成为一个整体，生成一个可供计算机执行的目标程序，成为可执行程序（executive program）。

 即使一个程序只包含一个源程序文件，编译后得到的目标程序也不能直接运行，也要经过连接阶段，因为要与寒暑假进行链接，才能生成可执行程序。
 （4）运行可执行程序，得到运行结果。

 一个程序从编写到运行成功，并不是一次成功的，往往要经过多次反复。编写好的程序并不一定能保证正确无误，除了用人工方式检查外，还必须借助编译系统来检查有无语法错误。

 为了编译、链接和运行C程序，必须要有相应的编译系统。

 写出源程序后可以用任何一种编译系统对程序进行编译和连接工作，只要用户感到方便、有效即可。

 对编译系统的态度是，不应当只会一种编译系统，无论用哪一种编译系统，都应当能举一反三，在需要时会用其他编译系统进行工作。

1.6 程序设计的任务

如果只是编写和运行一个很简单的程序，上面介绍的步骤就够了。但是实际上要处理的问题比上面见到的例子复杂得多，需要考虑和处理的问题也复杂得多。程序设计就是指从确定任务到得到结果、写出文档的全过程。
从确定问题到最后完成任务，一般经历以下几个工作阶段：
1）问题分析。对于接手的任务要进行认真的分析，研究所给定的条件，分析最后应达到的目标，找出解决问题的规律，选择解体的方法。在此过程种可以忽略一些次要的因素而使问题抽象化。这就是建立模型。
2）设计算法。即设计出解体的方法和具体步骤。
3）编写程序。根据得到的算法，用一种高级语言编写出源程序。
4）对源程序进行编辑、编译和链接，得到可执行程序。
5）运行程序，分析结果。运行可执行程序，得到运行结果。能得到运行结果并不意味着程序正确，要对结果进行分析，看它是否合理。
6）编写程序文档。许多程序使提供给别人使用的，如同正式的产品应当提供产品说明书一样，正式提供给用户使用的程序，必须向用户提供程序说明书。内容包括：程序名称、程序功能、运行环境、程序的装入和启动给、需要输入的数据，以及使用的注意事项等。

第2章 算法——程序的灵魂

通过第1章的学习，了解了C语言的特点，看到了简单得C语言程序。现在从程序的内容方面进行讨论，也就是一个程序中应该包含什么信息。或者说，为了实现解题的要求，程序应当向计算机发送什么信息。

一个程序主要包括以下两发面的信息：
1）对数据的描述。在程序中要指定那些数据以及这些数据的类型和数据的组织方式。这就是数据结构（data structure）。
2）对操作的描述。即要求计算机进行操作的步骤，也就是算法（alorithm）。

实际上，一个过程化的程序除了以上两个主要要素以外，要应当采用结构化程序设计方法进行程序设计，并且用某一种计算机语言表示。因此，算法、数据结构、程序设计方法和语言工具4个方面是一个程序设计人员所具备的知识，在设计一个程序时要综合运用这几方面的知识。本书中不肯嗯更全面介绍这些内容，它们都属于有关的专门课程范畴。在这4个方面中，算法是灵魂，数据结构是加工对象，语言是工具，编程需要采用合适的方法。

算法解决“做什么”和“怎么做”的问题。程序中的操作语句，实际上就是算法的体现。显然，不了解算法就谈不上程序设计。本书不是伊恩专门介绍算法的教材，也不是一本只介绍C语言语法规则的使用说明。本书将通过一些实例把以上4个方面的知识结合起来，是读者学会考虑解题的思路，并且能正确地编写出C程序。

由于算法的重要性，本章先介绍有关算法的初步知识，以便后面各章的学习建立一些基础。

2.1 什么是算法

算法是一种逐步解决问题或完成任务的方法。
更正式的定义：
算法是一组明确步骤的有序集合，它产生结果并在有限时间内终止。

计算机算法可分为两大类别：数值运算算法和非数值运算算法。数值运算的目的是求数值解，例如求方程的根、求一个函数的定积分等，都属于数值运算范畴。非数值运算包括的面十分广泛，最常见的是用于事务管理领域，例如对一批职工按姓名排序、图书检索、认识管理和行车调度管理等。目前，计算机在非数值运算方面的运用晕晕超过了在数值运算方面的应用。

由于数值运算往往有现成的模型，可以运用数值分析方法，因此对数值运算的算法的研究比较深入，算法比较成熟。对各种数值运算都有比较成熟的算法可供选用。人们常常把这些算法汇编成册，或者将这些程序存放在磁盘或光盘上，供用户调用。例如有的计算机胸痛提供“数学程序库”，使用起来十分方面。

非数值运算的种类繁多，要求各异，难以做到全部都有现成的答案，因此已有一些典型的非数值运算算法有现成的、成熟的算法可供使用。许多问题往往需要使用者参考已有的类似算法的思路，重新设计解决特定问题的专门算法。本书不可能罗列所有算法，只是向通过一些典型算法的介绍，帮助读者了解什么是算法，怎样设计一个算法，帮助读者与一反三。希望读者通过本章介绍的例子了解怎样提出问题，怎样思考问题，怎样表示一个算法。

2.2 简单的算法举例

算法的特性

1）有穷性
2）确定性
3）有零个或多个输入
4）有一个或多个输出
5）有效性

算法的表示
UML
伪代码

2.4.5 用伪代码表示算法

伪代码使用于介于Iran语言和计算机语言之间的文字和符号来描述算法。

例2.16 求5！，用伪代码表示的算法如下：
begin
t := 1
i := 2
while i <= 5
{
	t := t * i
	i := i + 1
}
print t
end

2.5 结构化程序设计方法

前面介绍了结构化的算法和3种基本结构。一个结构化程序就是用计算机语言表示的结构化算法，用3种基本结构组成的程序必然是结构化的程序。这种程序便于编写、阅读、修改和维护，这就减少了程序出错的机会，提高了程序的可靠性，保证了程序的质量。
结构化程序设计强调程序设计风格和程序结构的规范化，提倡清晰的结构。怎样才能得到一个结构化的程序呢？如果面临一个复杂的问题，是难以一下子写出一个层次分明、结构清晰、算法正确的程序的。结构化程序设计方法的基本思路是：把一个复杂问题的求解过程分阶段进行，每个阶段处理的问题都控制在人们容易理解和处理的范围内。

具体的说，采取以下方法来保证得到结构化的程序：
（1）自顶而下；
（2）逐步细化；
（3）模块化设计；
（4）结构化编码。

提倡用这种方法设计程序，这就是用工程的方法设计程序。

应当掌握自顶而下、逐步细化的程序设计方法。这种设计方法的过程是将问题求解由抽象逐步具体化的过程。

用这种方法便于验证算法的正确性，在向下一层展开之前应仔细检查本层设计是否正确，只有上一层是正确的才能向下细化。如果每一层设计都没有问题，则成哥算法就是正确的。由于每一层向下细化时都不太复杂，因此容易保证整个算法的正确性。检查时也是由上而下逐层检查，这样做，思路清楚，有条不紊地一步一步地进行，既严谨由方便。

在程序设计种长采用模块化的设计方法，尤其当程序比较复杂时，更有必要。子啊拿到一个程序模块以后，根据程序模块的功能将它划分为若干个子模块，入宫这些子模块的规模还嫌大，可以再划分为更小的模块。这个过程采用自顶而下的方法来实现。

程序中的子模块在C语言中通常用函数来实现。

程序中的子模块一般不超过50行，即把它打印输出时不超过一页，这样的规模便于组织，也便于阅读。划分子模块时应注意模块的独立性，即使用一个模块完成一项弄能，耦合性越少越好。模块化设计的思想实际上时一种“分而治之”的思想，把一个大人物分为若干个子任务，每一个子任务就相对简单了。

结构化程序设计方法用来解决人脑思维能力的局限性和被处理问题的复杂ing之间的矛盾。

在设计好一个结构化算法之后，还要善于进行结构化编码。所谓编码就是将已设计好的算法用计算机语言来表示，即根据已经细化的算法正确地写出计算机程序。结构化语言都有与3中基本结构对应的语句，进行结构化编程序是不困难的。

习题

4. 用传统流程图表示求解以下问题的算法
1）有两个瓶子A和B，分别盛放醋和酱油，要求将它们互换。
解：
取一空瓶子C，把瓶子A中的内容倒入瓶子C中。
把瓶子B中的内容倒入瓶子A中
把瓶子C中的内容倒入瓶子B中
2）一次将10个数输入，要求输出其中最大的数。
解：
令large=负无穷
当有更多数时，如果large < ai，large := ai
print large
3）有3个数a，b，c，要求按大小顺序把它们输出。
解：

4）求1 + 2 + 3 + ... + 100.
sum = 0
当有更多的数，sum = sum + i, i ++.
print sum
5）判断一个数n能否同时被3和5整除。
解：
if n % 3 == 0 then if n % 5 == 0 then print n
6）将100~200之间的素数输出。
解：
for i in 100 to 200
  if shiSuShu(i) then print i
7）求两个数m和n的最大公约数。
8）求方程式 ax^2 + bx + c = 0 的根。分别考虑：
a. 有两个不等的实根
b. 有两个相等的实根。
8. 用子等而下、逐步细化的方法进行以下算法的设计：
（1）输出100~2000年中是闰年的年份，复合i安眠两个条件之一的年份是闰年。
（2）
（3）输入10个数，输出其中最大的一个数。

第3章 最简单的C程序设计——顺序程序设计

有了前两章的基础，现在可以开始由浅入深地学习C语言程序设计了。

为了能编写C语言程序，必须具备以下地知识和能力：
1）要有正确地解题思路，即学会设计算法，否则无从下手
2）掌握C语言的语法，知道怎样使用C语言所提供的功能编写出一个完整的、正确的程序。也就是在设计好算法之后，能用C语言正确表示此算法。
3）在写算法和编写程序时，要采用结构化程序设计方法，编写出机构化的程序。

例3.1 有人用温度计测量出用华氏法表示的温度，今要求把它转化为以摄氏法表示的温度。
解题思路：这个问题的算法很简单，关键在于找到二者间的转换公式。根据物理学知识，知道以下转换公式：c = 5 / 9 (f - 32)
据此，算法为：
get f
c = 5 / 9 (f - 32)
print c

C的运算符
（1）算术运算符	+ - * / ++ --
（2）关系运算符	> < == >= <= !=
（3）逻辑运算符 ! && ||
（4）位运算符		<<>>~ | ^ &
（5）赋值运算符	= 及其扩展赋值运算符
（6）条件运算符	?:
（7）都好运算符	,
（8）指针运算符	* &
（9）求字节数运算符	sizeof
（10）强制类型转换运算符	(类型)
（11）成员运算符	. ->
（12）下表运算符	[]
（13）其他  ()

3.3 C语句

（1）控制语句
1）if()...else
2)for()...
3)while()...
4)do...while
5)continue
6)break
7)switch
8)return 
9)goto
（2）函数调用语句
（3）表达式语句
（4）空语句
（5）复合语句

习题
1. 加入我国国名生产总值的年增长率为9%，计算10年后我国国名生产总值与现在相比增长多少百分比。计算公式为

p = (1 + r) ^ n

r为年增长率，n为年数，p为与现在相比的倍数

2. 存款利息的计算。有1000元，向存5年，可按以下5种办法存：
1）一次存5年期。
2）先存2年期，到期后将本息再存3年期。
3）。。。

4. 分析下面的程序：

#include<stdio.h>
int main()
{ char c1, c2;
  c1 = 97;
  c2 = 98;
  printf("c1 = %c, c2 = %c\n", c1, c2);
  printf("c1 = %d, c2 = %d\n", c1, c2);
  return 0;
}
(1)运行时会输出什么信息？为什么？
（2）如果将程序第4，5行改为
c1 = 197;
c2 = 198;
运行时会输出什么信息？为什么？
（3）如果将程序第3行改为
int c1, c2;
运行时会输出什么信息？为什么？

7. 设圆半径r=1.5，圆柱高h=3，求圆周长、圆面积、圆球表面积、圆球体积、圆柱体积。

第4章 选择结构程序设计

例4.4 输入一个字符，判别它是否为大写字母，如果是，将它转换成小写字母；如果不是，不转换。然后输出最后得到的字符。

4.7 用switch语句实现多分支选择结构

例4.6 要求按照考试成绩的等级输出百分制分数段，A等为85分以上，B等为70~84分，C等为60~69分，D等为60分以下。成绩的等级由键盘输入。


习题

1. 写两个函数，分别求两个整数的最大公约数和最小公倍数，用主函数调用这两个函数，并输出结果。两个整数由键盘输入。

2. 求方程 ax^2 + bx + c = 0 的根，用3个函数分别求当：b^2 - 4ac 大于0、等于0和小于0时的根并输出结果。

3. 写一个判素数的函数，在主函数输入一个整数，输出是否为素数的信息。

4. 写一个函数，使给定一个3*3的二维整型数组转置，即行列互换。

5. 写一个函数，使输入的一个字符串按反序存放，在主函数中输入和输出字符串。
